generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  phone      String
  created_at DateTime @default(now())

  cart        Cart?
  orders      Order[]
  favorites   Favorite[]
  evaluations Evaluation[]

  @@map("users")
}

model Game {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  categoryId  Int
  price       Int
  image       String
  description String   @db.VarChar(1000)
  created_at  DateTime @default(now())

  carts       Cart[]
  orders      Order[]
  favorites   Favorite[]
  category    Category     @relation(fields: [categoryId], references: [id])
  evaluations Evaluation[]

  @@map("games")
}

model Category {
  id     Int    @id @default(autoincrement())
  name   String @unique
  namePt String

  products Game[]

  @@map("categories")
}

model Cart {
  userId Int  @id
  user   User @relation(fields: [userId], references: [id])

  products Game[]

  @@map("carts")
}

model Order {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])

  products       Game[]
  value          Int
  status         String
  payment_method String
  created_at     DateTime @default(now())

  @@map("orders")
}

model Favorite {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])

  products   Game[]
  created_at DateTime @default(now())

  @@map("favorites")
}

model Evaluation {
  id          Int      @id @default(autoincrement())
  stars       Int
  description String?  @db.VarChar(500)
  created_at  DateTime @default(now())

  userId    Int
  user      User @relation(fields: [userId], references: [id])
  productId Int
  product   Game @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("evaluations")
}
